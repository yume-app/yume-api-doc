openapi: 3.0.0
info:
  version: '1.0'
  title: YUME API
  description: >
    # Introduction

    Fast, secure tunnels to your internal networks. [Webhook
    Relay](https://webhookrelay.com) allows you to expose your localhost 

    or any other server in private network to the public internet without
    configuring port forwarding 

    or firewalls. 

    This API is documented in **Swagger format**. Webhook Relay allows to
    dynamically configure your tunnels and webhook forwarding.
        
    # Available authentication methods

    Webhook Relay offers three forms of authentication:
      - **Basic Auth** - only available for non-OAuth accounts. Use your username and password.
      - **API Key** - available for all accounts, token pairs can be generated [here](https://my.webhookrelay.com/tokens)
      - **JWT** - mainly used by the [admin dashboard](https://my.webhookrelay.com) with a 'Authorization Bearer: token' 
  termsOfService: 'https://webhookrelay.com/tos/'
  contact:
    email: support@webhookrelay.com
externalDocs:
  description: Find out more in the official documentation.
  url: 'https://webhookrelay.com/v1/guide/'
tags:
  - name: Users
    description: >-
  - name: Providers
    description: >-
  - name: Requests
    description: >-
  - name: Rating
    description: >-
  - name: Addresses
    description: >-

x-tagGroups:
  - name: Yume
    tags:
      - Users
      - Providers
      - Requests
      - Rating
      - Addresses

paths:
  /users:
    get:
      tags:
        - Users
      summary: List All Users
      responses:
        '200':
          description: Successfull Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      summary: Create a New User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateRequest'
      responses:
        '201':
          description: Successfull Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid create user request supplied
      
  /users/{userID}/:
    parameters:
      - name: userID
        in: path
        description: ID of user
        required: true
        schema:
          type: integer
    get:
      tags:
        - Users
      summary: Get User Details
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
    put:
      tags:
        - Users
      summary: Update User Details
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '200':
          description: Successfull Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid update user request supplied

  /users/{userID}/rating:
    parameters:
      - name: userID
        in: path
        description: ID of user
        required: true
        schema:
          type: integer
    get:
        tags:
          - Rating
        summary: Get User Rating
        responses:
          '200':
            description: Successful Response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/UserRating'
          '404':
            description: User not found
    post:
      tags:
        - Rating
      summary: Rate a Provider
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateProviderRequest'
      responses:
        '201':
          description: Successfull Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderRating'
        '400':
          description: Invalid rating request supplied
    put:
      tags:
        - Rating
      summary: Update Provider Rating
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateProviderRequest'
      responses:
        '200':
          description: Successfull Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderRating'
        '400':
          description: Invalid update rating request supplied

  /providers/{providerID}/rating:
    parameters:
      - name: providerID
        in: path
        description: ID of provider
        required: true
        schema:
          type: integer
    get:
      tags:
        - Rating
      summary: Get Provider Rating
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderRating'
        '404':
          description: Provider not found
    post:
      tags:
        - Rating
      summary: Rate a User
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateUserRequest'
      responses:
        '201':
          description: Successfull Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRating'
        '400':
          description: Invalid rating request supplied
    put:
      tags:
        - Rating
      summary: Update User Rating
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RateUserRequest'
      responses:
        '200':
          description: Successfull Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserRating'
        '400':
          description: Invalid update rating request supplied
  
  /users/{userID}/addresses:
    parameters:
      - name: userID
        in: path
        description: User ID
        required: true
        schema:
          type: integer
    get:
      tags:
        - Addresses
      summary: Lists User Addresses
      responses:
        '200':
          description: Successfull Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserAddress'
    post:
      tags:
        - Addresses
      summary: Create a User Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserAddressRequest'
      responses:
        '201':
          description: Successfull Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
        '400':
          description: Invalid create user address request supplied

  /users/{userID}/addresses/{addressID}/:
    parameters:
      - name: userID
        in: path
        description: User ID
        required: true
        schema:
          type: integer
      - name: addressID
        in: path
        description: Address ID
        required: true
        schema:
          type: integer
    put:
      tags:
        - Addresses
      summary: Update User Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserAddressRequest'
      responses:
        '200':
          description: Successfull Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserAddress'
        '400':
          description: Invalid update user address request supplied
    delete:
      tags:
        - Addresses
      summary: Delete User Address
      responses:
        '200':
          description: Successful Response
        '404':
          description: User Address not found
          
          
  /providers/{providerID}/addresses:
    parameters:
      - name: providerID
        in: path
        description: Provider ID
        required: true
        schema:
          type: integer
    get:
      tags:
        - Addresses
      summary: Lists Provider Addresses
      responses:
        '200':
          description: Successfull Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProviderAddress'
    post:
      tags:
        - Addresses
      summary: Create a Provider Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateProviderAddressRequest'
      responses:
        '201':
          description: Successfull Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderAddress'
        '400':
          description: Invalid create provider address request supplied
    
  /providers/{userID}/addresses/{addressID}/:
    parameters:
      - name: providerID
        in: path
        description: Provider ID
        required: true
        schema:
          type: integer
      - name: addressID
        in: path
        description: Address ID
        required: true
        schema:
          type: integer
    put:
      tags:
        - Addresses
      summary: Update Provider Address
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProviderAddressRequest'
      responses:
        '200':
          description: Successfull Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProviderAddress'
        '400':
          description: Invalid update provider address request supplied
    delete:
      tags:
        - Addresses
      summary: Delete Provider Address
      responses:
        '200':
          description: Successful Response
        '404':
          description: Provider Address not found

 
servers:
  - url: 'https://my.webhookrelay.com/'
components:
  schemas:
    User:
      title: User
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        birthday:
          type: integer
        email:
          type: string
        mobile:
          type: integer
        photo:
          type: string
        password:
          type: string
      example:
        id: 1
        name: 'John'
        birthday: 634780800
        email: 'john@potatoes.a.com'
        mobile: 143532322
        photo: 'localhost/john_picture.png'
        password: '*****'

    UserCreateRequest:
      title: User Create Request
      type: object
      properties:
        name:
          type: string
        birthday:
          type: integer
        email:
          type: string
        mobile:
          type: integer
        photo:
          type: string
        password:
          type: string
      required:
        - name
        - birthday
        - email
        - mobile
        - password
      example:
        name: 'John'
        birthday: 634780800
        email: 'john@potatoes.a.com'
        mobile: 143532322
        photo: 'localhost/john_picture.png'
        password: '*****'

    UserUpdateRequest:
      title: User Update Request
      type: object
      properties:
        name:
          type: string
        birthday:
          type: integer
        email:
          type: string
        mobile:
          type: integer
        photo:
          type: string
        password:
          type: string
      example:
        name: 'John'

    UserRating:
      title: UserRating
      type: object
      properties:
        user:
          type: integer
        rating:
          type: integer
        voters:
          type: integer
      example:
        user: 1
        rating: 3
        voters: 21
    
    ProviderRating:
      title: ProviderRating
      type: object
      properties:
        provider:
          type: integer
        rating:
          type: integer
        voters:
          type: integer
      example:
        provider: 1
        rating: 3
        voters: 21

    RateProviderRequest:
      title: RateProviderRequest
      type: object
      properties:
        provider:
          type: integer
        rating:
          type: integer
      required:
        - provider
        - rating
      example:
        provider: 1
        rating: 4

    RateUserRequest:
      title: RateUserRequest
      type: object
      properties:
        user:
          type: integer
        rating:
          type: integer
      required:
        - user
        - rating
      example:
        user: 2
        rating: 1

    Address:
      title: Address
      type: object
      properties:
        id:
          type: integer
        country:
          type: string
        city:
          type: string
        lat:
          type: double
        lng:
          type: double 
      example:
        id: 30
        country: Portugal
        city: Lisbon
        lat: 38.70767862
        lng: -9.13660973

    UserAddress:
      title: User Address
      type: object
      properties:
        id:
          type: integer
        user:
          type: integer
        local_address:
          type: string
        address:
          type: object
          $ref: '#/components/schemas/Address'
      example:
        id: 2
        user: 1
        local_address: Praça do Comércio, 1100-148 Lisboa
        address:
          id: 30
          country: Portugal
          city: Lisbon
          lat: 38.70767862
          lng: -9.13660973

    ProviderAddress:
      title: Provider Address
      type: object
      properties:
        id:
          type: integer
        provider:
          type: integer
        state:
          type: boolean
        address:
          type: object
          $ref: '#/components/schemas/Address'
      example:
        id: 3
        provider: 3
        state: true
        address:
          id: 30
          country: Portugal
          city: Lisbon
          lat: 38.70767862
          lng: -9.13660973

    CreateUserAddressRequest:
      title: Create User Address Request
      type: object
      properties:
        local_address:
          type: string
        country:
          type: string
        city:
          type: string
        lat:
          type: double
        lng:
          type: double
      required:
        - local_address
        - country
        - city
      example:
        local_address: "Praça do Comércio, 1100-148 Lisboa"
        country: "Portugal"
        city: "Lisbon"
        lat: 38.70767862
        lng: -9.13660973

    CreateProviderAddressRequest:
      title: Create Provider Address Request
      type: object
      properties:
        state:
          type: boolean
        country:
          type: string
        city:
          type: string
        lat:
          type: double
        lng:
          type: double
      required:
        - state
        - country
        - city
      example:
        state: true
        country: "Portugal"
        city: "Lisbon"
        lat: 38.70767862
        lng: -9.13660973
  
    UpdateUserAddressRequest:
      title: Update User Address Request
      type: object
      properties:
        local_address:
          type: string
        country:
          type: string
        city:
          type: string
        lat:
          type: double
        lng:
          type: double
      example:
        local_address: "Praça do Comércio, 1100-148 Lisboa"

    UpdateProviderAddressRequest:
      title: Update Provider Address Request
      type: object
      properties:
        state:
          type: boolean
        country:
          type: string
        city:
          type: string
        lat:
          type: double
        lng:
          type: double
      example:
        state: true